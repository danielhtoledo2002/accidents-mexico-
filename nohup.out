</link>2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
cargo build --release
warning: unused `Result` that must be used
 --> build.rs:3:5
  |
3 | /     Command::new("tailwindcss")
4 | |         .args("-c tailwind.config.js -i input.css -o output.css".split_whitespace())
5 | |         .status();
  | |_________________^
  |
  = note: this `Result` may be an `Err` variant, which should be handled
  = note: `#[warn(unused_must_use)]` on by default

warning: `advance_data_base_project` (build script) generated 1 warning
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 12.79s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error[E0308]: mismatched types
 --> build.rs:3:5
  |
2 |   fn main() {
  |             - expected `()` because of default return type
3 | /     Command::new("tailwindcss")
4 | |         .args("-c tailwind.config.js -i input.css -o output.css".split_whitespace())
5 | |         .status()
6 | |     .unwrap()
  | |             ^- help: consider using a semicolon here: `;`
  | |_____________|
  |               expected `()`, found `ExitStatus`

For more information about this error, try `rustc --explain E0308`.
error: could not compile `advance_data_base_project` due to previous error
error: Recipe `build` failed on line 5 with exit code 101
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 12.98s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

errorcargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 12.42s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
error: Recipe `run` was terminated on line 9 by signal 15
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 12.56s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

error: Recipe `build` was terminated on line 5 by signal cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 12.34s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
errorcargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error: Recipe `build` was terminated on line 5 by signal 15
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 12.46s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 12.44s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2020
2021
2019
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error: Recipe `cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 12.74s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 12.51s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 12.65s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error: expected `;`, found `}`
   --> src/main.rs:246:26
    |
246 |     (StatusCode::OK, css)
    |                          ^ help: add `;` here
247 | }
    | - unexpected token

warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 7 warnings
error: could not compile `advance_data_base_project` due to previous error; 7 warnings emitted
error: Recipe `build` failed on line 5 with exit code 101
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error: Recipe `build` was terminated on line 5 by signal 15
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error: expected `;`, found `}`
   --> src/main.rs:244:41
    |
244 |     let response = (StatusCode::OK, css)
    |                                         ^ help: add `;` here
245 | }
    | - unexpected token

warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 7 warnings
error: could not compile `advance_data_base_project` due to previous error; 7 warnings emitted
error: Recipe `build` failed on line 5 with exit code 101
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: unused variable: `response`
   --> src/main.rs:244:9
    |
244 |     let response = (StatusCode::OK, css).into_response();
    |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_response`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: unused variable: `response`
   --> src/main.rs:244:9
    |
244 |     let response = (StatusCode::OK, css).into_response();
    |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_response`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> src/main.rs:244:9
    |
244 |     let mut response = (StatusCode::OK, css).into_response();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: unused variable: `response`
   --> src/main.rs:244:13
    |
244 |     let mut response = (StatusCode::OK, css).into_response();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_response`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

errorcargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error: unexpected token: `}`
   --> src/main.rs:246:1
    |
246 | }
    | ^

warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> src/main.rs:244:9
    |
244 |     let mut response = (StatusCode::OK, css).into_response();
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 8 warnings
error: could not compile `advance_data_base_project` due to previous error; 8 warnings emitted
error: Recipe `build` failed on line 5 with exit code 101
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error: unexpected token: `}`
   --> src/main.rs:246:1
    |
246 | }
    | ^

warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

error[E0277]: the trait bound `&mut HeaderMap: IntoResponse` is not satisfied
   --> src/main.rs:241:40
    |
241 |   async fn styles() -> impl IntoResponse {
    |  ________________________________________^
242 | |     let css = std::fs::read_to_string("output.css").unwrap();
243 | |
244 | |     let mut response = (StatusCode::OK, css).into_response();
245 | |     response.headers_mut().
246 | | }
    | |_^ the trait `IntoResponse` is not implemented for `&mut HeaderMap`
    |
    = help: the trait `IntoResponse` is implemented for `HeaderMap`

error[E0277]: the trait bound `&mut HeaderMap: IntoResponse` is not satisfied
   --> src/main.rs:241:22
    |
241 | async fn styles() -> impl IntoResponse {
    |                      ^^^^^^^^^^^^^^^^^ the trait `IntoResponse` is not implemented for `&mut HeaderMap`
    |
    = help: the trait `IntoResponse` is implemented for `HeaderMap`

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

For more information about this error, try `rustc --explain E0277`.
warning: `advance_data_base_project` (bin "advance_data_base_project") generated 7 warnings
error: could not compile `advance_data_base_project` due to 3 previous errors; 7 warnings emitted
error: Recipe `build` failed on line 5 with exit code 101
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error[E0425]: cannot find value `CONTE` in this scope
   --> src/main.rs:245:35
    |
245 |     response.headers_mut().append(CONTE, value)
    |                                   ^^^^^ not found in this scope

error[E0425]: cannot find value `value` in this scope
   --> src/main.rs:245:42
    |
245 |     response.headers_mut().append(CONTE, value)
    |                                          ^^^^^ not found in this scope

warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

error[E0277]: the trait bound `bool: IntoResponse` is not satisfied
   --> src/main.rs:241:40
    |
241 |   async fn styles() -> impl IntoResponse {
    |  ________________________________________^
242 | |     let css = std::fs::read_to_string("output.css").unwrap();
243 | |
244 | |     let mut response = (StatusCode::OK, css).into_response();
245 | |     response.headers_mut().append(CONTE, value)
246 | | }
    | |_^ the trait `IntoResponse` is not implemented for `bool`
    |
    = help: the following other types implement trait `IntoResponse`:
              &'static [u8; N]
              &'static [u8]
              &'static str
              ()
              (Response<()>, R)
              (Response<()>, T1, R)
              (Response<()>, T1, T2, R)
              (Response<()>, T1, T2, T3, R)
            and 123 others

error[E0277]: the trait bound `bool: IntoResponse` is not satisfied
   --> src/main.rs:241:22
    |
241 | async fn styles() -> impl IntoResponse {
    |                      ^^^^^^^^^^^^^^^^^ the trait `IntoResponse` is not implemented for `bool`
    |
    = help: the following other types implement trait `IntoResponse`:
              &'static [u8; N]
              &'static [u8]
              &'static str
              ()
              (Response<()>, R)
              (Response<()>, T1, R)
              (Response<()>, T1, T2, R)
              (Response<()>, T1, T2, T3, R)
            and 123 others

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

Some errors have detailed explanations: E0277, E0425.
For more information about an error, try `rustc --explain E0277`.
warning: `advance_data_base_project` (bin "advance_data_base_project") generated 7 warnings
error: could not compile `advance_data_base_project` due to 4 previous errors; 7 warnings emitted
error: Recipe `build` failed on line 5 with exit code 101
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error: expected expression, found `,`
   --> src/main.rs:245:35
    |
245 |     response.headers_mut().append(, value)
    |                                   ^ expected expression

warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 7 warnings
error: could not compile `advance_data_base_project` due to previous error; 7 warnings emitted
error: Recipe `build` failed on line 5 with exit code 101
cargo build --release
    Blocking waiting for file lock on package cache
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error: Recipe `build` was terminated on line 5 by signal 15
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error: expected expression, found `,`
   --> src/main.rs:245:35
    |
245 |     response.headers_mut().append(, value)
    |                                   ^ expected expression

warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 7 warnings
error: could not compile `advance_data_base_project` due to previous error; 7 warnings emitted
error: Recipe `build` failed on line 5 with exit code 101
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error: expected expression, found `,`
   --> src/main.rs:245:35
    |
245 |     response.headers_mut().append(, value)
    |                                   ^ expected expression

warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 7 warnings
error: could not compile `advance_data_base_project` due to previous error; 7 warnings emitted
error: Recipe `build` failed on line 5 with exit code 101
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error[E0425]: cannot find value `CON` in module `axum::http::header`
   --> src/main.rs:245:55
    |
245 |     response.headers_mut().append(axum::http::header::CON, value)
    |                                                       ^^^ not found in `axum::http::header`

error[E0425]: cannot find value `value` in this scope
   --> src/main.rs:245:60
    |
245 |     response.headers_mut().append(axum::http::header::CON, value)
    |                                                            ^^^^^ not found in this scope

warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

error[E0277]: the trait bound `bool: IntoResponse` is not satisfied
   --> src/main.rs:241:40
    |
241 |   async fn styles() -> impl IntoResponse {
    |  ________________________________________^
242 | |     let css = std::fs::read_to_string("output.css").unwrap();
243 | |
244 | |     let mut response = (StatusCode::OK, css).into_response();
245 | |     response.headers_mut().append(axum::http::header::CON, value)
246 | | }
    | |_^ the trait `IntoResponse` is not implemented for `bool`
    |
    = help: the following other types implement trait `IntoResponse`:
              &'static [u8; N]
              &'static [u8]
              &'static str
              ()
              (Response<()>, R)
              (Response<()>, T1, R)
              (Response<()>, T1, T2, R)
              (Response<()>, T1, T2, T3, R)
            and 123 others

error[E0277]: the trait bound `bool: IntoResponse` is not satisfied
   --> src/main.rs:241:22
    |
241 | async fn styles() -> impl IntoResponse {
    |                      ^^^^^^^^^^^^^^^^^ the trait `IntoResponse` is not implemented for `bool`
    |
    = help: the following other types implement trait `IntoResponse`:
              &'static [u8; N]
              &'static [u8]
              &'static str
              ()
              (Response<()>, R)
              (Response<()>, T1, R)
              (Response<()>, T1, T2, R)
              (Response<()>, T1, T2, T3, R)
            and 123 others

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

Some errors have detailed explanations: E0277, E0425.
For more information about an error, try `rustc --explain E0277`.
warning: `advance_data_base_project` (bin "advance_data_base_project") generated 7 warnings
error: could not compile `advance_data_base_project` due to 4 previous errors; 7 warnings emitted
error: Recipe `build` failed on line 5 with exit code 101
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error[E0425]: cannot find value `CON` in module `axum::http::header`
   --> src/main.rs:245:55
    |
245 |     response.headers_mut().append(axum::http::header::CON, value)
    |                                                       ^^^ not found in `axum::http::header`

error[E0425]: cannot find value `value` in this scope
   --> src/main.rs:245:60
    |
245 |     response.headers_mut().append(axum::http::header::CON, value)
    |                                                            ^^^^^ not found in this scope

warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

error[E0277]: the trait bound `bool: IntoResponse` is not satisfied
   --> src/main.rs:241:40
    |
241 |   async fn styles() -> impl IntoResponse {
    |  ________________________________________^
242 | |     let css = std::fs::read_to_string("output.css").unwrap();
243 | |
244 | |     let mut response = (StatusCode::OK, css).into_response();
245 | |     response.headers_mut().append(axum::http::header::CON, value)
246 | | }
    | |_^ the trait `IntoResponse` is not implemented for `bool`
    |
    = help: the following other types implement trait `IntoResponse`:
              &'static [u8; N]
              &'static [u8]
              &'static str
              ()
              (Response<()>, R)
              (Response<()>, T1, R)
              (Response<()>, T1, T2, R)
              (Response<()>, T1, T2, T3, R)
            and 123 others

error[E0277]: the trait bound `bool: IntoResponse` is not satisfied
   --> src/main.rs:241:22
    |
241 | async fn styles() -> impl IntoResponse {
    |                      ^^^^^^^^^^^^^^^^^ the trait `IntoResponse` is not implemented for `bool`
    |
    = help: the following other types implement trait `IntoResponse`:
              &'static [u8; N]
              &'static [u8]
              &'static str
              ()
              (Response<()>, R)
              (Response<()>, T1, R)
              (Response<()>, T1, T2, R)
              (Response<()>, T1, T2, T3, R)
            and 123 others

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

Some errors have detailed explanations: E0277, E0425.
For more information about an error, try `rustc --explain E0277`.
warning: `advance_data_base_project` (bin "advance_data_base_project") generated 7 warnings
error: could not compile `advance_data_base_project` due to 4 previous errors; 7 warnings emitted
error: Recipe `build` failed on line 5 with exit code 101
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/main.rs:245:28
     |
245  |     response.headers_mut().append(axum::http::header::CONTENT_TYPE, )
     |                            ^^^^^^------------------------------------ an argument of type `HeaderValue` is missing
     |
note: method defined here
    --> /home/danielhtoledo/.cargo/registry/src/github.com-1ecc6299db9ec823/http-0.2.9/src/header/map.rs:1234:12
     |
1234 |     pub fn append<K>(&mut self, key: K, value: T) -> bool
     |            ^^^^^^
help: provide the argument
     |
245  |     response.headers_mut().append(axum::http::header::CONTENT_TYPE, /* HeaderValue */)
     |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the trait bound `bool: IntoResponse` is not satisfied
   --> src/main.rs:241:40
    |
241 |   async fn styles() -> impl IntoResponse {
    |  ________________________________________^
242 | |     let css = std::fs::read_to_string("output.css").unwrap();
243 | |
244 | |     let mut response = (StatusCode::OK, css).into_response();
245 | |     response.headers_mut().append(axum::http::header::CONTENT_TYPE, )
246 | | }
    | |_^ the trait `IntoResponse` is not implemented for `bool`
    |
    = help: the following other types implement trait `IntoResponse`:
              &'static [u8; N]
              &'static [u8]
              &'static str
              ()
              (Response<()>, R)
              (Response<()>, T1, R)
              (Response<()>, T1, T2, R)
              (Response<()>, T1, T2, T3, R)
            and 123 others

error[E0277]: the trait bound `bool: IntoResponse` is not satisfied
   --> src/main.rs:241:22
    |
241 | async fn styles() -> impl IntoResponse {
    |                      ^^^^^^^^^^^^^^^^^ the trait `IntoResponse` is not implemented for `bool`
    |
    = help: the following other types implement trait `IntoResponse`:
              &'static [u8; N]
              &'static [u8]
              &'static str
              ()
              (Response<()>, R)
              (Response<()>, T1, R)
              (Response<()>, T1, T2, R)
              (Response<()>, T1, T2, T3, R)
            and 123 others

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

Some errors have detailed explanations: E0061, E0277.
For more information about an error, try `rustc --explain E0061`.
warning: `advance_data_base_project` (bin "advance_data_base_project") generated 7 warnings
error: could not compile `advance_data_base_project` due to 3 previous errors; 7 warnings emitted
error: Recipe `build` failed on line 5 with exit code 101
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

error[E0061]: this method takes 2 arguments but 1 argument was supplied
    --> src/main.rs:245:28
     |
245  |     response.headers_mut().append(axum::http::header::CONTENT_TYPE, )
     |                            ^^^^^^------------------------------------ an argument of type `HeaderValue` is missing
     |
note: method defined here
    --> /home/danielhtoledo/.cargo/registry/src/github.com-1ecc6299db9ec823/http-0.2.9/src/header/map.rs:1234:12
     |
1234 |     pub fn append<K>(&mut self, key: K, value: T) -> bool
     |            ^^^^^^
help: provide the argument
     |
245  |     response.headers_mut().append(axum::http::header::CONTENT_TYPE, /* HeaderValue */)
     |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the trait bound `bool: IntoResponse` is not satisfied
   --> src/main.rs:241:40
    |
241 |   async fn styles() -> impl IntoResponse {
    |  ________________________________________^
242 | |     let css = std::fs::read_to_string("output.css").unwrap();
243 | |
244 | |     let mut response = (StatusCode::OK, css).into_response();
245 | |     response.headers_mut().append(axum::http::header::CONTENT_TYPE, )
246 | | }
    | |_^ the trait `IntoResponse` is not implemented for `bool`
    |
    = help: the following other types implement trait `IntoResponse`:
              &'static [u8; N]
              &'static [u8]
              &'static str
              ()
              (Response<()>, R)
              (Response<()>, T1, R)
              (Response<()>, T1, T2, R)
              (Response<()>, T1, T2, T3, R)
            and 123 others

error[E0277]: the trait bound `bool: IntoResponse` is not satisfied
   --> src/main.rs:241:22
    |
241 | async fn styles() -> impl IntoResponse {
    |                      ^^^^^^^^^^^^^^^^^ the trait `IntoResponse` is not implemented for `bool`
    |
    = help: the following other types implement trait `IntoResponse`:
              &'static [u8; N]
              &'static [u8]
              &'static str
              ()
              (Response<()>, R)
              (Response<()>, T1, R)
              (Response<()>, T1, T2, R)
              (Response<()>, T1, T2, T3, R)
            and 123 others

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

Some errors have detailed explanations: E0061, E0277.
For more information about an error, try `rustc --explain E0061`.
warning: `advance_data_base_project` (bin "advance_data_base_project") generated 7 warnings
error: could not compile `advance_data_base_project` due to 3 previous errors; 7 warnings emitted
error: Recipe `build` failed on line 5 with exit code 101
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error: expected identifier, found `)`
   --> src/main.rs:245:82
    |
245 |     response.headers_mut().append(axum::http::header::CONTENT_TYPE, HeaderValue::)
    |                                                                                  ^ expected identifier

warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 7 warnings
error: could not compile `advance_data_base_project` due to previous error; 7 warnings emitted
error: Recipe `build` failed on line 5 with exit code 101
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error: expected identifier, found `)`
   --> src/main.rs:245:82
    |
245 |     response.headers_mut().append(axum::http::header::CONTENT_TYPE, HeaderValue::)
    |                                                                                  ^ expected identifier

warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 7 warnings
error: could not compile `advance_data_base_project` due to previous error; 7 warnings emitted
error: Recipe `build` failed on line 5 with exit code 101
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

error[E0277]: the trait bound `bool: IntoResponse` is not satisfied
   --> src/main.rs:241:40
    |
241 |   async fn styles() -> impl IntoResponse {
    |  ________________________________________^
242 | |     let css = std::fs::read_to_string("output.css").unwrap();
243 | |
244 | |     let mut response = (StatusCode::OK, css).into_response();
245 | |     response.headers_mut().append(axum::http::header::CONTENT_TYPE, HeaderValue::from_static("text/css"))
246 | | }
    | |_^ the trait `IntoResponse` is not implemented for `bool`
    |
    = help: the following other types implement trait `IntoResponse`:
              &'static [u8; N]
              &'static [u8]
              &'static str
              ()
              (Response<()>, R)
              (Response<()>, T1, R)
              (Response<()>, T1, T2, R)
              (Response<()>, T1, T2, T3, R)
            and 123 others

error[E0277]: the trait bound `bool: IntoResponse` is not satisfied
   --> src/main.rs:241:22
    |
241 | async fn styles() -> impl IntoResponse {
    |                      ^^^^^^^^^^^^^^^^^ the trait `IntoResponse` is not implemented for `bool`
    |
    = help: the following other types implement trait `IntoResponse`:
              &'static [u8; N]
              &'static [u8]
              &'static str
              ()
              (Response<()>, R)
              (Response<()>, T1, R)
              (Response<()>, T1, T2, R)
              (Response<()>, T1, T2, T3, R)
            and 123 others

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

For more information about this error, try `rustc --explain E0277`.
warning: `advance_data_base_project` (bin "advance_data_base_project") generated 7 warnings
error: could not compile `advance_data_base_project` due to 2 previous errors; 7 warnings emitted
error: Recipe `build` failed on line 5 with exit code 101
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
errorcargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 12.73s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
errorcargo build --releaseblack
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

errorcargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 12.96s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

errorcargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 12.80s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
2021
2020
2019
2018
2021
2020
2020
2019
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

2021
warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.00s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
2020
2019
2018
2019
2021
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
error: cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.06s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

errorcargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.40s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.62s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error: Recipe `build` was terminated on line 5 by signal 15
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

error: cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 12.93s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.77s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error: Recipe `build` was terminated on line 5 by signal 15
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

errorcargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.13s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
error: Recipe `run` was terminated on line cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

error: Recipe `build` was terminated on line 5 by signal 15
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

error: Recipe `build` was terminated on line 5 by signal 15
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.04s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.14s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
2021
2020
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.26s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.08s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
error: Recipe `run` was terminated on line cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
error: Recipe `build` was terminated on line 5 by signal 15
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.10s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
errorcargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.25s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

error: Recipe `build` was terminated on line 5 by signal 15
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.30s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.35s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.32s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.30s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.14s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

errorcargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.23s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
error: Recipe `run` was terminated on line 9 by signal 15
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.31s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
errorcargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.21s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
2020
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
errorcargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.16s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
2018
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
error: cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

error: cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 12.94s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.11s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.19s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.18s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
errorcargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

errorcargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
errorcargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

cargo build --release
   Compiling advance_data_base_project v0.1.0 (/home/danielhtoledo/advance_data_base_project)
warning: unused import: `Error`
 --> src/main.rs:1:22
  |
1 | use anyhow::{anyhow, Error, Result};
  |                      ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::io::Write`
 --> src/main.rs:4:5
  |
4 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> src/main.rs:6:5
  |
6 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::error::Elapsed`
  --> src/main.rs:16:5
   |
16 | use tokio::time::error::Elapsed;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/main.rs:160:13
    |
160 |         let mut yo: Vec<(String, Decimal)> = make_query::<(String, Decimal)>("SELECT 'Zona Rural' as rural ,SUM(total) as accidentes_rurales
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused import: `axum::handler::HandlerWithoutStateExt`
 --> src/main.rs:9:5
  |
9 | use axum::handler::HandlerWithoutStateExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Connection`
 --> src/main.rs:3:12
  |
3 | use sqlx::{Connection, MySql, Pool};
  |            ^^^^^^^^^^

warning: function `give_type_accident` is never used
   --> src/main.rs:131:10
    |
131 | async fn give_type_accident(tyype: &str, pool: &sqlx::Pool<MySql>, anio : i32, state : i32) -> Vec<TypeAccidentByState>{
    |          ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:21:5
   |
21 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: structure field `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: variable `NOM_ENTIDAD` should have a snake case name
  --> src/main.rs:38:5
   |
38 |     NOM_ENTIDAD: String,
   |     ^^^^^^^^^^^ help: convert the identifier to snake case: `nom_entidad`

warning: `advance_data_base_project` (bin "advance_data_base_project") generated 12 warnings (run `cargo fix --bin "advance_data_base_project"` to apply 5 suggestions)
    Finished release [optimized] target(s) in 13.16s
sudo killall -9 advance_data_base_project
sudo ./target/release/advance_data_base_project
Resultado3 { x: ["Zona Urbana", "Zona Rural"], y: [1259128, 110975] }
2018
